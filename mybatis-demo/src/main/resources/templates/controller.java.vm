package ${package.Controller};
import com.example.mybatisdemo.common.utils.StringUtil;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
    #if(${restControllerStyle})
    import org.springframework.stereotype.Controller;
    #else
    import org.springframework.web.bind.annotation.RequestMethod;
    import org.springframework.web.bind.annotation.RestController;
    #end
    #if(${superControllerClassPackage})
    import ${superControllerClassPackage};
    #end
import org.springframework.beans.factory.annotation.Autowired;
import ${package.Service}.${table.serviceName};
import com.example.mybatisdemo.common.utils.Result;
import ${package.Entity}.${entity};
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
/**
 *  @description : ${entity} 控制器
 *  ---------------------------------
 *   @author ${author}
 *  @since ${date}
 */
#if(${restControllerStyle})
@Controller
#else
@RestController
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
private final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);
@Autowired
public ${table.serviceName} ${table.entityPath}Service;

/**
 * @description : 获取分页列表
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/get${entity}List",method = RequestMethod.POST)
public Object get${entity}List(${entity} param , @RequestParam(value = "draw",defaultValue = "0") Integer draw,
@RequestParam(value = "length") Integer length,
@RequestParam(value = "start") Integer start) {
            return null;
        }

/**
 * @description : 通过id获取${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/get${entity}ById",method = RequestMethod.GET)
public Object get${entity}ById(String id) {
        try {
            ${entity} param= ${table.entityPath}Service.selectById(id);
            return Result.ok().put(StringUtil.toLowerCaseFirstOne("${entity}"),param);
        }catch (Exception e) {
            logger.info("异常信息:{}"+e.getMessage());
            return Result.error("异常信息:{"+e.getClass().getName()+"}");
        }
    }

/**
 * @description : 通过id删除${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/delete${entity}ById",method = RequestMethod.GET)
public Object delete${entity}ById(String id) {
        try{
            if (${table.entityPath}Service.deleteById(id)){
                return Result.ok();
            }else {
                return Result.error();
            }
        }catch (Exception e) {
            logger.info("异常信息:{}"+e.getMessage());
            return Result.error("异常信息:{"+e.getClass().getName()+"}");
        }
    }

/**
 * @description : 通过id更新${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/update${entity}ById",method = RequestMethod.POST)
public Object update${entity}ById(${entity} param) {
        try{
            if (${table.entityPath}Service.updateById(param)){
                return Result.ok();
            }else {
                return Result.error();
            }
        }catch (Exception e) {
            logger.info("异常信息:{}"+e.getMessage());
            return Result.error("异常信息:{"+e.getClass().getName()+"}");
        }
    }

/**
 * @description : 添加${entity}
 * ---------------------------------
 * @author : ${author}
 * @since : Create in ${date}
 */
@RequestMapping(value = "/add${entity}",method = RequestMethod.POST)
public Object add${entity}(${entity} param) {
        try{
            if (${table.entityPath}Service.insert(param)){
                return Result.ok();
            }else {
            return Result.error();
            }
        }catch (Exception e) {
            logger.info("异常信息:{}"+e.getMessage());
            return Result.error("异常信息:{"+e.getClass().getName()+"}");
        }
    }
}